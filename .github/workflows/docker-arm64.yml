name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  armhf_build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3  
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
        
    - name: CMake build and run
      run: |
        docker run --rm --privileged multiarch/qemu-user-static:register --reset 
        docker run --rm -v "$PWD":/usr/src/myapp -w /usr/src/myapp arm32v7/gcc bash -c "apt update && apt install -y cmake; mkdir build && cmake -B build && cmake --build build --config release && cmake --install build; ./dist/BarcodeReader ./images/AllSupportedBarcodeTypes.png ./license-key.txt"
        
    - name: Archive Release
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: arm32.zip
        exclusions: '*.git* /*node_modules/* .editorconfig'
        path: ${{github.workspace}}/dist

    - uses: actions/upload-artifact@v2
      with:
        path: ./*.zip

  arm64_build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3  
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
        
    - name: CMake build and run
      run: |
        docker run --rm --privileged multiarch/qemu-user-static:register --reset 
        docker run --rm -v "$PWD":/usr/src/myapp -w /usr/src/myapp arm64v8/gcc bash -c "apt update && apt install -y cmake; mkdir build && cmake -B build && cmake --build build --config release && cmake --install build; ./dist/BarcodeReader ./images/AllSupportedBarcodeTypes.png ./license-key.txt"
        
    - name: Archive Release
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: arm64.zip
        exclusions: '*.git* /*node_modules/* .editorconfig'
        path: ${{github.workspace}}/dist

    - uses: actions/upload-artifact@v2
      with:
        path: ./*.zip
