name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    name: CMake build on Docker image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [x86_64-bionic, arm64-bionicï¼Œ armhf-bionic]

    steps:
    - uses: actions/checkout@v3  
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        
    - name: CMake build and run
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        docker run --rm --privileged multiarch/qemu-user-static:register --reset 
        docker run --rm -v "$PWD":/usr/src/myapp -w /usr/src/myapp multiarch/ubuntu-core:${{matrix.architecture}} -c "apt update && apt install cmake g++; mkdir build && cmake -B build && cmake --build build --config release && cmake --install build; ./dist/BarcodeReader ./images/AllSupportedBarcodeTypes.png ./license-key.txt"
        
    - name: Archive Release
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: arm64.zip
        exclusions: '*.git* /*node_modules/* .editorconfig'
        path: ${{github.workspace}}/dist

    - uses: actions/upload-artifact@v2
      with:
        path: ./*.zip
